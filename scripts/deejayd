#!/usr/bin/env python
"""
This is the script used to launch deejayd
"""

############ Parse Option ############################
######################################################
from optparse import OptionParser
usage = "usage: %prog [options]"
parser = OptionParser(usage=usage)

# List options
parser.set_defaults(pidfile="deejayd.pid",kill = False,daemon = True)
parser.add_option("-u","--uid",dest="uid",type="string",\
    help="the uid to run as")
parser.add_option("-g","--gid",dest="gid",type="string",\
    help="the gid to run as")
parser.add_option("-n","--nodaemon",action="store_false",dest="daemon",\
    help="no daemonize deejayd")
parser.add_option("-l","--log-file",type="string",dest="logfile",\
    metavar="FILE", help="Specify the log file")
parser.add_option("-p","--pid-file",type="string",dest="pidfile",\
    metavar="FILE", help="Specify the log file")
parser.add_option("-c","--conf-file",type="string",dest="conffile",\
    metavar="FILE", help="Specify a custom conf file")
parser.add_option("-k","--kill",action="store_true",dest="kill",\
    help="Kill the actual deejayd process")

(options, args) = parser.parse_args()
######################################################

# add custom config parms
import errno,random,sys,os,pwd,grp
from deejayd.ui.config import DeejaydConfig
if options.conffile:
    if os.path.isfile(options.conffile):
        DeejaydConfig.customConf = options.conffile
    else:
        sys.exit("The config file does not exist.")
        

######################################################

from deejayd.net.deejaydProtocol import DeejaydFactory
from twisted.python import log

# install reactor
config = DeejaydConfig()
media_backend = config.get("general","media_backend")
video_support = config.get("general","video_support") == "yes"
if media_backend == "gstreamer":
    if video_support:
        # Install gtk2 reactor
        from twisted.internet import gtk2reactor
        gtk2reactor.install()
    else:
        # Install glib2 reactor
        from twisted.internet import glib2reactor
        glib2reactor.install()
elif media_backend == "both":
    from twisted.internet import glib2reactor
    glib2reactor.install()

from twisted.internet import reactor


def daemonize():
    # See http://www.erlenstar.demon.co.uk/unix/faq_toc.html#TOC16
    if os.fork():   # launch child and...
        os._exit(0) # kill off parent
    os.setsid()
    if os.fork():   # launch child and...
        os._exit(0) # kill off parent again.
    os.umask(077)
    null=os.open('/dev/null', os.O_RDWR)
    for i in range(3):
        try:
            os.dup2(null, i)
        except OSError, e:
            if e.errno != errno.EBADF:
                raise
    os.close(null)


def killDeejayd(pidfile):
    if os.path.exists(pidfile):
        try: pid = int(open(pidfile).read())
        except ValueError:
            sys.exit('Pidfile %s contains non-numeric value' % pidfile)
        try: 
            os.kill(pid, 9)
            removePID(pidfile)
        except OSError, err:
            sys.exit('Unable to stop deejayd : %s, are you sure it running ?'\
                ,(err,))
    else:
        sys.exit('no PidFile found, are you sure deejayd running ?')


def removePID(pidfile):
    try: os.unlink(pidfile)
    except OSError, e:
        if e.errno == errno.EACCES or e.errno == errno.EPERM:
            sys.exit("Unable to remove pid file : %s" % (err,))


def setEnv(options):
    # Init random generator
    random.seed()

    if options.daemon:
        daemonize()
    # Store the pid
    removePID(options.pidfile)
    open(options.pidfile,'wb').write(str(os.getpid()))

    if options.gid:
        try: gid = int(options.gid)
        except ValueError:
            gid = grp.getgrnam(options.gid)[2]
        try: os.setgid(gid)
        except OSError:
            sys.exit("Unable to change gid of the process")
    if options.uid:
        try: uid = int(options.uid)
        except ValueError:
            uid = pwd.getpwnam(options.uid)[2]
        try: 
            os.setuid(uid)
        except OSError:
            sys.exit("Unable to change uid of the process")


def startLog(options):
    if options.logfile:
        try: logFile = open(options.logfile, 'a')
        except IOError:
            sys.exit("Unable to open the log file %s" % (options.logfile,))
    elif options.daemon:
        try: logFile = open("./deejayd.log", 'w')
        except IOError:
            sys.exit("Unable to open default log file %s" % (options.logfile,))
    else: logFile = sys.stdout
    log.startLogging(logFile)

# Start 
if __name__ == "__main__":
    if options.kill:
        killDeejayd(options.pidfile)
        sys.exit(1)

    setEnv(options)
    startLog(options)

    factory = DeejaydFactory()
    config = DeejaydConfig()
    port = config.getint("net", "port")
    reactor.listenTCP(port, factory)
    reactor.run()

# vim: ts=4 sw=4 expandtab
