
                        deejayd - Line Protocol

All data between the client and server is encoded in UTF-8.
-------------------------------------------------------------------------------

Commands Format : 
-----------------  
cmdName arg1 arg2

If arguments contain spaces, they should be surrounded by double quotation
marks, ".

Command Completion :
--------------------
A command returns "OK\n" on completion or "ACK some error\n" on failure.
These denote the end of command execution.

Available Commands :
-----------------

------------------
setXML
------------------
description :
Activate XML protocol

------------------
close
------------------
description :
Close connection with deejayd
=== ping ===

Does nothing, just replies with an acknowledgement that the command was received

Arguments :
  * ''This command does not accept any argument.''

Expected return value : Ack

=== status ===

Return status of deejayd. Given informations are :
  * playlist : _int_ id of the current playlist
  * playlistlength : _int_ length of the current playlist
  * webradio : _int_ id of the current webradio list
  * webradiolength : _int_ number of recorded webradio
  * queue : _int_ id of the current queue
  * queuelength : _int_ length of the current queue
  * random : 0 (not activated) or 1 (activated)
  * repeat : 0 (not activated) or 1 (activated)
  * volume : [0-100] current volume value
  * state : [play-pause-stop] the current state of the player
  * song : _int_ the position of the current song
  * songid : _int_ the id of the current song
  * mode : [playlist-webradio] the current mode
  * audio_updating_db : _int_ show when a audio library update is in progress  
  * audio_updating_error : _string_ error message that apppears when the 
                           audio library update has failed
  * video_updating_db : _int_ show when a video library update is in progress  
  * video_updating_error : _string_ error message that apppears when the 
                           video library update has failed

Arguments :
  * ''This command does not accept any argument.''

Expected return value : KeyValue

=== audio_update ===

Update the audio library.
  * audio_updating_db : the id of this task. It appears in the status until the
    update are completed.

Arguments :
  * ''This command does not accept any argument.''

Expected return value : KeyValue


-----------------
lsinfo
-----------------
arguments :
directory : type->string, required->false

description : 
lists files of "directory".
    === play ===

Begin playing at song or webradio with id "id".

Arguments :
  * {{{id}}} (Simple and Optional) : int

Expected return value : Ack

=== stop ===

Stop playing.

Arguments :
  * ''This command does not accept any argument.''

Expected return value : Ack

=== pause ===

Toggle play/pause.

Arguments :
  * ''This command does not accept any argument.''

Expected return value : Ack

=== next ===

Go to next song or webradio.

Arguments :
  * ''This command does not accept any argument.''

Expected return value : Ack

=== previous ===

Go to previous song or webradio.

Arguments :
  * ''This command does not accept any argument.''

Expected return value : Ack


-----------------
setvol
-----------------
arguments :
volume : type->int, required->true

description : 
set volume to "volume".
The range of volume is 0-100
    === seek ===

Seeks to the position "time" (in seconds) of the current song (in
    playlist mode).

Arguments :
  * {{{time}}} (Simple and Mandatory) : int

Expected return value : Ack

=== random ===

Set random state to "value", "value" should be 0 or 1.

Arguments :
  * {{{value}}} (Simple and Mandatory) : list : 0 or 1

Expected return value : Ack

=== repeat ===

Set repeat state to "value", "value" should be 0 or 1.

Arguments :
  * {{{value}}} (Simple and Mandatory) : list 0 or 1

Expected return value : Ack

