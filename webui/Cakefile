# Deejayd, a media player daemon
# Copyright (C) 2013 Mickael Royer <mickael.royer@gmail.com>
#                    Alexandre Rossi <alexandre.rossi@gmail.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

fs     = require 'fs'
{exec} = require 'child_process'

# omit src/ and .coffee to make the below lines a little shorter
commonAppFiles = [
  'utils'
  'models/media'
  'models/medialist'
  'models/mediafilter'
  'djdclient'
  'widgets/loading'
  'widgets/library'
  'widgets/player-btn'
  'widgets/webradio'
  'views/player'
  'controllers/base'
  'controllers/player'
  'controllers/library'
  'controllers/webradio'
]

mobileAppFiles  = [
  'views/mobile/footer'
  'views/mobile/playlist'
  'views/mobile/library'
  'views/mobile/webradio'
  'mobile'
]

desktopAppFiles  = [
  'views/desktop/alerts'
  'views/desktop/playlist'
  'desktop'
]

task 'build', 'Build deejayd webui (desktop/mobile) application from source files', ->
    build = (files, output) ->
        appFiles = commonAppFiles.concat(files)
        appContents = new Array remaining = appFiles.length
        for file, index in appFiles then do (file, index) ->
          fs.readFile "src/#{file}.coffee", 'utf8', (err, fileContents) ->
            throw err if err
            appContents[index] = fileContents
            process(appContents, output) if --remaining is 0

    process = (input, output)->
        fs.writeFile "gen/#{output}.coffee", input.join('\n\n'), 'utf8', (err) ->
            throw err if err
            exec "coffee --compile gen/#{output}.coffee", (err, stdout, stderr) ->
                throw err if err
                console.log stdout + stderr
                fs.unlink "gen/#{output}.coffee", (err) ->
                    throw err if err
                    console.log 'Done.'

    build(mobileAppFiles, "djd_mobile")
    build(desktopAppFiles, "djd_desktop")


